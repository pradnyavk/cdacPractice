<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.app.app" />
	
	<beans:bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" name="dataSource" id="dataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url" value="jdbc:mysql://localhost:3306/userReg?useSSL=false" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="toor" />
	</beans:bean>
	
	<beans:bean class="org.springframework.jdbc.core.JdbcTemplate" id="template" name="template">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
	</beans:bean>
	
	<beans:bean id="dao" name="dao" class="com.app.app.dao.UserDao">
		<beans:property name="template" ref="template"></beans:property>
	</beans:bean>
	
	<!-- <beans:bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" name="entityManagerFactory" id="entityManagerFactory">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="jpaVendorAdapter">
			<beans:bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></beans:bean>
		</beans:property>
		<beans:property name="packagesToScan" value="com.app.app.pojos"></beans:property>
		<beans:property name="jpaProperties">
			<beans:props>
				<beans:prop key="hibernate.show-sql">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	
	<beans:bean class="org.springframework.orm.jpa.JpaTransactionManager" name="transactionManager" id="transactionManager">
		<beans:property name="entityManagerFactory" ref="entityManagerFactory"/>
	</beans:bean>
	<tx:annotation-driven transaction-manager="transactionManager"/> -->
	
	
	
	
</beans:beans>
